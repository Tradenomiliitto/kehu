mixin form-invalid-feedback(name, errors)
    .invalid-feedback
        span= errors.find((e) => e.param === name).msg

mixin form-helper-text(text)
    if text
        small.form-text.text-muted= text

mixin form-group-input (name, label, errors, values)
    .form-group
        label(for=name)= label
        if errors && errors.find((e) => e.param === name)
            input.form-control.is-invalid(id=name, name=name, type="text", value=values[name])
            +form-invalid-feedback(name, errors)
        else
            input.form-control(id=name, name=name, type="text", value=values ? values[name] : '')

mixin form-group-timestamp (name, label, errors, values)
    .form-group
        label(for=name)= label
        if errors && errors.find((e) => e.param === name)
            if moment(values[name], "D.M.YYYY").isValid()
                input.form-control.is-invalid(id=name, name=name, type="text", value=moment(values[name], "D.M.YYYY").format('D.M.YYYY'))
            else if moment(values[name]).isValid()
                input.form-control.is-invalid(id=name, name=name, type="text", value=moment(values[name]).format('D.M.YYYY'))
            else
                input.form-control.is-invalid(id=name, name=name, type="text", value=moment().format('D.M.YYYY'))
            +form-invalid-feedback(name, errors)
        else
            if values && moment(values[name], "D.M.YYYY").isValid()
                input.form-control(id=name, name=name, type="text", value=moment(values[name], "D.M.YYYY").format('D.M.YYYY'))
            else if values && moment(values[name]).isValid()
                input.form-control(id=name, name=name, type="text", value=moment(values[name]).format('D.M.YYYY'))
            else
                input.form-control(id=name, name=name, type="text", value=moment().format('D.M.YYYY'))


mixin form-group-textarea (name, label, errors, values)
    .form-group
        label(for=name)= label
        if errors && errors.find((e) => e.param === name)
            textarea.form-control.is-invalid(id=name, name=name, rows=7)= values[name]
            +form-invalid-feedback(name, errors)
        else
            textarea.form-control(id=name, name=name, rows=7)= values ? values[name] : ''

mixin form-group-tags (name, label, errors, values, text)
    .form-group
        label(for=name)= label
        if errors && errors.find((e) => e.param === name)
            if Array.isArray(values[name])
                input.tagsinput.form-control.is-invalid(id=name, name=name, type="text", value=values[name].map(t => t.text).join(','), data-role="tagsinput")
            else
                input.tagsinput.form-control.is-invalid(id=name, name=name, type="text", value=values[name], data-role="tagsinput")
            +form-invalid-feedback(name, errors)
            +form-helper-text(text)
        else
            if values && values[name] && Array.isArray(values[name])
                input.tagsinput.form-control(id=name, name=name, type="text", value=values[name].map(t => t.text).join(','), data-role="tagsinput")
            else if values && values[name]
                input.tagsinput.form-control(id=name, name=name, type="text", value=values[name], data-role="tagsinput")
            else
                input.tagsinput.form-control(id=name, name=name, type="text", value='', data-role="tagsinput")
            +form-helper-text(text)

mixin form-input-hidden(name, value)
    if errors && errors.find((e) => e.param === name)
        .form-group
            input.form-control.is-invalid(name=name, type="hidden", value=value)
            +form-invalid-feedback(name, errors)
    else
        input.form-control(name=name, type="hidden", value=value)

mixin kehu-form(action, csrfToken, user, values, errors)
    form(method="POST", action=action)
        +form-input-hidden("_csrf", csrfToken)
        +form-input-hidden("giver_id", user.id)
        +form-input-hidden("owner_id", user.id)
        +form-group-textarea('text', 'Kehu', errors, values)
        +form-group-input('giver_name', 'Kehun antaja', errors, values)
        +form-group-input('situation', 'Tilanne', errors, values)
        +form-group-timestamp('date_given', 'Ajankohta', errors, values)
        +form-group-tags('tags', 'Asiasanat', errors, values, 'Erottele asiasanat pilkulla. Esimerkiksi: luento, koulutus')
        button.btn.btn-primary.submit-kehu-nw(type="submit") Tallenna

mixin kehu-delete-button (csrfToken, kehu)
    form(method="POST", action=`/kehut/${kehu.id}?_method=DELETE`)
        input(name="_csrf", type="hidden", value=csrfToken)
        button#delete-kehu.btn.btn-danger.btn-sm.float-right.delete-kehu-nw
            span.oi.oi-trash(title="Poista", aria-hidden="true")

mixin kehu-edit-button (kehu, classNames)
    a.btn.btn-info.btn-sm.float-right.edit-kehu-nw(href=`/kehut/${kehu.id}/muokkaa`, class=classNames)
        span.oi.oi-pencil(title="Muokkaa", aria-hidden="true")

mixin kehu-card (kehu)
    .card.bg-light.mb-3.Kehu
        .card-body
            p.Kehu-quotemark “
            p.lead.font-italic.Kehu-text.kehu-text-nw= kehu.text
            hr.my-3
            table.table.table-sm.KehuTable
                tbody
                    tr
                        td Kehuja:
                        td.kehu-giver-name-nw= kehu.giver_name
                    tr
                        td Tilanne:
                        td.kehu-situation-nw= kehu.situation
                    tr
                        td Aika:
                        td.kehu-date-given-nw= moment(kehu.date_given).format('D.M.YYYY')
            p.kehu-tags-nw= kehu.tags.map(t => `#${t.text}`).join(' ')

mixin kehu-link (kehu)
    a(href=`/kehut/${kehu.id}`).KehuLink.kehu-link-nw
        .card.bg-light.mb-3.mr-3.Kehu
            .card-body
                p.Kehu-quotemark “
                p.lead.font-italic.Kehu-text= kehu.text
                hr.my-3
                p= `– ${kehu.giver_name}`
                p= kehu.tags.map(t => `#${t.text}`).join(' ')